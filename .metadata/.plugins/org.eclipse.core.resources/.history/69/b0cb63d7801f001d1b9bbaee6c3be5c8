package com.sujata.resource;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.sujata.bean.Employee;
import com.sujata.persistence.EmployeeDao;
import com.sujata.service.EmployeeService;

@RestController
public class EmployeeResource {

	@Autowired
	private EmployeeService employeeService;
	
	@GetMapping(path = "/employees",produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<Employee>> getAllEmployeesResource(){
		List<Employee> employees = employeeService.getAllEmployees();
		if(employees.size() <= 0) {
			return new ResponseEntity<List<Employee>>(new ArrayList<Employee>(), HttpStatus.NO_CONTENT);
		}
		
		return new ResponseEntity<List<Employee>>(employees, HttpStatus.OK);
	}
	
	@GetMapping(path = "/employees/{id}",produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<Employee> getEmployeeByIdResource(@PathVariable("id") int id) {
		Optional<Employee> opEmployee=employeeService.searchEmployeeByID(id);
		if(opEmployee.isPresent()) {
			return new ResponseEntity<Employee>(opEmployee.get(), HttpStatus.FOUND);
		}
			
		return new ResponseEntity<Employee>(new Employee(), HttpStatus.NOT_FOUND);
	}
	
	@PostMapping(path = "/employees",produces = MediaType.APPLICATION_JSON_VALUE,consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<Employee> saveEmployeeResource(@RequestBody Employee employee) {
		Employee emp = employeeService.saveEmployee(employee);
		if(emp == null) {
			return new ResponseEntity<Employee>(new Employee(), HttpStatus.EXPECTATION_FAILED);			
		}
		
		return new ResponseEntity<Employee>(emp, HttpStatus.CREATED);
	}
	
	@DeleteMapping(path = "/employees/{id}",produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<Employee> deleteEmployeeResource(@PathVariable("id") int id) {
		Employee emp = employeeService.deleteEmployee(id);
		System.out.println(emp);
		if(emp == null) {
			return new ResponseEntity<Employee>(new Employee(), HttpStatus.BAD_REQUEST);
		}
		
		return new ResponseEntity<Employee>(emp, HttpStatus.OK);
	}
	
	@PutMapping(path = "/employees/{id}/{sal}",produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<Employee> updateEmployeeSalaryResource(@PathVariable("id") int id,@PathVariable("sal") double salary) {
		Employee emp = employeeService.updateSalary(id, salary);
		if(emp == null) {
			return new ResponseEntity<Employee>(new Employee(), HttpStatus.ACCEPTED);
		}
		
		return new ResponseEntity<Employee>(emp, HttpStatus.BAD_REQUEST);
	}
}
